# Thermal Fire Detection & Alert System with MLX90640, Telegram, and PLC Integration

This project is a **Raspberry Pi-based smart fire detection system** that uses a **MLX90640 thermal camera** to monitor temperature in real-time. When high temperatures (e.g., ≥30°C) are detected, it:

- Sends an alert message and thermal image via **Telegram**
- Activates a **buzzer** as a local warning
- Sends a **shutdown signal to a PLC** using **OPC UA**

---

## Features

- Real-time thermal monitoring (MLX90640)
- Automatic image capture and processing
- Telegram bot alert with photo
- Local buzzer alert
- PLC shutdown command via OPC UA
- Designed for industrial environments using Raspberry Pi

---

## Hardware Requirements

- [x] Raspberry Pi (tested on RPi 4)
- [x] MLX90640 Thermal Camera
- [x] Buzzer (connected to GPIO 18)
- [x] Internet Connection (for Telegram alerts)
- [x] Optional: PLC with OPC UA server enabled

---

## Software Requirements

Install the following libraries via `pip`:

```bash
pip install opencv-python numpy python-opcua python-telegram-bot adafruit-circuitpython-mlx90640


##  Configuration

```bash
TELEGRAM_BOT_TOKEN = 'YOUR_BOT_TOKEN'  # Get from BotFather on Telegram
CHAT_ID = 'YOUR_CHAT_ID'              # Use a tool like @userinfobot on Telegram

PLC_URL = "opc.tcp://localhost:4840"  # Change to match your PLC endpoint
NODE_ID = "ns=2;s=OPC_Daten.Anlage_ausschalten"  # OPC UA node for shutdown

## How It Works
1- Continuously reads thermal frames from the MLX90640 sensor.
2- If maximum pixel temperature exceeds 30°C:
- Captures a thermal image and saves it.
- Sends an alert and the image via Telegram.
- Activates a buzzer for 5 seconds.
- Sends a shutdown signal to the PLC using OPC UA.
3- Waits 30 seconds before rechecking to avoid alert spam.


## File Overview

| Function Name           | Description                                                   |
|-------------------------|---------------------------------------------------------------|
| `capture_frame()`       | Captures a single thermal frame from the MLX90640 sensor.     |
| `save_thermal_image()`  | Normalizes, resizes, and saves the thermal image as `.jpg`.   |
| `send_telegram_alert()` | Sends a temperature alert and image to a Telegram chat.       |
| `shutdown_machine()`    | Sends a shutdown signal to the PLC via OPC UA.                |
| `trigger_buzzer()`      | Activates the buzzer for a specified duration.                |
| `monitor_temperature()` | Continuously monitors temperature and performs safety actions.|



##  Wiring Diagram

| Component       | Raspberry Pi Pin         | GPIO Number |
|----------------|---------------------------|-------------|
| MLX90640 SDA   | Pin 3 (SDA)               | GPIO 2      |
| MLX90640 SCL   | Pin 5 (SCL)               | GPIO 3      |
| MLX90640 VCC   | Pin 1 (3.3V Power)        | —           |
| MLX90640 GND   | Pin 6 (Ground)            | —           |
| Buzzer (+)     | Pin 12                    | GPIO 18     |
| Buzzer (–)     | Pin 14 (Ground)           | —           |


## Security Tips
- DO NOT hard-code sensitive tokens (e.g., Telegram bot token) in public repositories.
- Store secrets in a .env file or use environment variables in production systems.


























